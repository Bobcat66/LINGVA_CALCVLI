
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND APPEND ASSIGN_ARR ASSIGN_VAR BOOLEAN CAST_VAR CONVERT_TO_ARRAY DECLARE_ARR DECLARE_VAR DECREMENT DELETE_ELE DIVIDE ELIF ELSE END END_LOOP EQUALS FILE_BEGINNING FILE_END GREATER GREATER_OR_EQUAL ID IF INCREMENT LENGTH LESSER LESSER_OR_EQUAL MULTIPLY NOT NUMBER OR PRINT PROMPT RETRIEVE_ELE STRING SUBTRACT THEN WHILE XORmain : FILE_BEGINNING statement\n            | main FILE_ENDmain : main statementstatement : PRINT expressionexpression : PROMPT expressionexpression : STRINGexpression : NUMBERexpression : BOOLEANexpression : IDexpression : ADD expression expression\n                  | SUBTRACT expression expression\n                  | MULTIPLY expression expression\n                  | DIVIDE expression expressionexpression : AND expression expression\n                  | OR expression expression\n                  | XOR expression expression\n                  | NOT expressionexpression : EQUALS expression expression\n                  | GREATER expression expression\n                  | GREATER_OR_EQUAL expression expression\n                  | LESSER expression expression\n                  | LESSER_OR_EQUAL expression expressionif_statement : IF expression statement_listif_statement : if_statement ELIF expression statement_listif_statement : if_statement ELSE statement_liststatement : if_statement END_LOOPstatement_list : THEN statement\n                      | statement_list ENDstatement_list : statement_list statement'
    
_lr_action_items = {'FILE_BEGINNING':([0,],[2,]),'$end':([1,3,4,8,9,11,12,13,14,28,32,40,50,51,52,53,54,55,56,57,58,59,60,61,],[0,-2,-3,-1,-4,-6,-7,-8,-9,-26,-5,-17,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'FILE_END':([1,3,4,8,9,11,12,13,14,28,32,40,50,51,52,53,54,55,56,57,58,59,60,61,],[3,-2,-3,-1,-4,-6,-7,-8,-9,-26,-5,-17,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'PRINT':([1,2,3,4,8,9,11,12,13,14,28,32,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[5,5,-2,-3,-1,-4,-6,-7,-8,-9,-26,-5,-17,5,5,5,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,5,-28,-29,-27,]),'IF':([1,2,3,4,8,9,11,12,13,14,28,32,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[7,7,-2,-3,-1,-4,-6,-7,-8,-9,-26,-5,-17,7,7,7,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,7,-28,-29,-27,]),'PROMPT':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[10,10,10,-6,-7,-8,-9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-5,10,10,10,10,10,10,10,-17,10,10,10,10,10,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'STRING':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[11,11,11,-6,-7,-8,-9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-5,11,11,11,11,11,11,11,-17,11,11,11,11,11,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'NUMBER':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[12,12,12,-6,-7,-8,-9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-5,12,12,12,12,12,12,12,-17,12,12,12,12,12,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'BOOLEAN':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[13,13,13,-6,-7,-8,-9,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,13,13,13,13,13,13,13,-17,13,13,13,13,13,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'ID':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[14,14,14,-6,-7,-8,-9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-5,14,14,14,14,14,14,14,-17,14,14,14,14,14,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'ADD':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[15,15,15,-6,-7,-8,-9,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-5,15,15,15,15,15,15,15,-17,15,15,15,15,15,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'SUBTRACT':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[16,16,16,-6,-7,-8,-9,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-5,16,16,16,16,16,16,16,-17,16,16,16,16,16,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'MULTIPLY':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[17,17,17,-6,-7,-8,-9,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-5,17,17,17,17,17,17,17,-17,17,17,17,17,17,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'DIVIDE':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[18,18,18,-6,-7,-8,-9,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-5,18,18,18,18,18,18,18,-17,18,18,18,18,18,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'AND':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[19,19,19,-6,-7,-8,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-5,19,19,19,19,19,19,19,-17,19,19,19,19,19,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'OR':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[20,20,20,-6,-7,-8,-9,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-5,20,20,20,20,20,20,20,-17,20,20,20,20,20,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'XOR':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[21,21,21,-6,-7,-8,-9,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-5,21,21,21,21,21,21,21,-17,21,21,21,21,21,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'NOT':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[22,22,22,-6,-7,-8,-9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-5,22,22,22,22,22,22,22,-17,22,22,22,22,22,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'EQUALS':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[23,23,23,-6,-7,-8,-9,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-5,23,23,23,23,23,23,23,-17,23,23,23,23,23,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'GREATER':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[24,24,24,-6,-7,-8,-9,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-5,24,24,24,24,24,24,24,-17,24,24,24,24,24,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'GREATER_OR_EQUAL':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[25,25,25,-6,-7,-8,-9,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-5,25,25,25,25,25,25,25,-17,25,25,25,25,25,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'LESSER':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[26,26,26,-6,-7,-8,-9,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-5,26,26,26,26,26,26,26,-17,26,26,26,26,26,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'LESSER_OR_EQUAL':([5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,],[27,27,27,-6,-7,-8,-9,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-5,27,27,27,27,27,27,27,-17,27,27,27,27,27,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),'END_LOOP':([6,9,11,12,13,14,28,32,40,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[28,-4,-6,-7,-8,-9,-26,-5,-17,-25,-23,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,-24,-28,-29,-27,]),'ELIF':([6,9,11,12,13,14,28,32,40,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[29,-4,-6,-7,-8,-9,-26,-5,-17,-25,-23,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,-24,-28,-29,-27,]),'ELSE':([6,9,11,12,13,14,28,32,40,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[30,-4,-6,-7,-8,-9,-26,-5,-17,-25,-23,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,-24,-28,-29,-27,]),'END':([9,11,12,13,14,28,32,40,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[-4,-6,-7,-8,-9,-26,-5,-17,63,63,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,63,-28,-29,-27,]),'THEN':([11,12,13,14,30,31,32,40,46,50,51,52,53,54,55,56,57,58,59,60,61,],[-6,-7,-8,-9,48,48,-5,-17,48,-10,-11,-12,-13,-14,-15,-16,-18,-19,-20,-21,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'statement':([1,2,47,48,49,62,],[4,8,64,65,64,64,]),'if_statement':([1,2,47,48,49,62,],[6,6,6,6,6,6,]),'expression':([5,7,10,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,41,42,43,44,45,],[9,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,]),'statement_list':([30,31,46,],[47,49,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> FILE_BEGINNING statement','main',2,'p_main','LINGVA_CALCVLI_PARSER.py',9),
  ('main -> main FILE_END','main',2,'p_main','LINGVA_CALCVLI_PARSER.py',10),
  ('main -> main statement','main',2,'p_main_statement','LINGVA_CALCVLI_PARSER.py',17),
  ('statement -> PRINT expression','statement',2,'p_print_statement','LINGVA_CALCVLI_PARSER.py',21),
  ('expression -> PROMPT expression','expression',2,'p_prompt','LINGVA_CALCVLI_PARSER.py',25),
  ('expression -> STRING','expression',1,'p_terminal_string_expr','LINGVA_CALCVLI_PARSER.py',29),
  ('expression -> NUMBER','expression',1,'p_terminal_number_expr','LINGVA_CALCVLI_PARSER.py',33),
  ('expression -> BOOLEAN','expression',1,'p_terminal_boolean_expr','LINGVA_CALCVLI_PARSER.py',37),
  ('expression -> ID','expression',1,'p_terminal_id_expr','LINGVA_CALCVLI_PARSER.py',41),
  ('expression -> ADD expression expression','expression',3,'p_binary_operators','LINGVA_CALCVLI_PARSER.py',45),
  ('expression -> SUBTRACT expression expression','expression',3,'p_binary_operators','LINGVA_CALCVLI_PARSER.py',46),
  ('expression -> MULTIPLY expression expression','expression',3,'p_binary_operators','LINGVA_CALCVLI_PARSER.py',47),
  ('expression -> DIVIDE expression expression','expression',3,'p_binary_operators','LINGVA_CALCVLI_PARSER.py',48),
  ('expression -> AND expression expression','expression',3,'p_logic_operators','LINGVA_CALCVLI_PARSER.py',60),
  ('expression -> OR expression expression','expression',3,'p_logic_operators','LINGVA_CALCVLI_PARSER.py',61),
  ('expression -> XOR expression expression','expression',3,'p_logic_operators','LINGVA_CALCVLI_PARSER.py',62),
  ('expression -> NOT expression','expression',2,'p_logic_operators','LINGVA_CALCVLI_PARSER.py',63),
  ('expression -> EQUALS expression expression','expression',3,'p_comparators','LINGVA_CALCVLI_PARSER.py',75),
  ('expression -> GREATER expression expression','expression',3,'p_comparators','LINGVA_CALCVLI_PARSER.py',76),
  ('expression -> GREATER_OR_EQUAL expression expression','expression',3,'p_comparators','LINGVA_CALCVLI_PARSER.py',77),
  ('expression -> LESSER expression expression','expression',3,'p_comparators','LINGVA_CALCVLI_PARSER.py',78),
  ('expression -> LESSER_OR_EQUAL expression expression','expression',3,'p_comparators','LINGVA_CALCVLI_PARSER.py',79),
  ('if_statement -> IF expression statement_list','if_statement',3,'p_if_statement_begin','LINGVA_CALCVLI_PARSER.py',93),
  ('if_statement -> if_statement ELIF expression statement_list','if_statement',4,'p_elif_statement','LINGVA_CALCVLI_PARSER.py',97),
  ('if_statement -> if_statement ELSE statement_list','if_statement',3,'p_else_statement','LINGVA_CALCVLI_PARSER.py',101),
  ('statement -> if_statement END_LOOP','statement',2,'p_end_if_statement','LINGVA_CALCVLI_PARSER.py',105),
  ('statement_list -> THEN statement','statement_list',2,'p_statement_list','LINGVA_CALCVLI_PARSER.py',109),
  ('statement_list -> statement_list END','statement_list',2,'p_statement_list','LINGVA_CALCVLI_PARSER.py',110),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_expand','LINGVA_CALCVLI_PARSER.py',117),
]
